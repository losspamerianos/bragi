server {
    listen 80;
    server_name cdn.siegfried.app;
    root /var/www/certbot;

    location /.well-known/acme-challenge/ {
        allow all;
        try_files $uri =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;  # Neue HTTP/2 Syntax
    server_name cdn.siegfried.app;
    
    client_max_body_size 10M;

    # SSL Konfiguration
    ssl_certificate /etc/letsencrypt/live/cdn.siegfried.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cdn.siegfried.app/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Bildoptimierungen
    location /storage/ {
        alias /var/www/storage/;
        expires 7d;
        add_header Cache-Control "public, no-transform";
        add_header Vary Accept;  # FÃ¼r Content-Negotiation

        # Bildtyp-spezifische Konfiguration
        location ~* \.(jpg|jpeg|png|gif|ico|webp|avif)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
            # WebP und AVIF Content-Negotiation
            set $webp_ext "";
            set $avif_ext "";
            if ($http_accept ~* "image/avif") {
                set $avif_ext ".avif";
            }
            if ($http_accept ~* "image/webp") {
                set $webp_ext ".webp";
            }
            try_files $uri$avif_ext $uri$webp_ext $uri @backend;
        }

        # SVG Optimierung
        location ~* \.svg$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
            add_header Content-Type image/svg+xml;
            try_files $uri @backend;
        }

        try_files $uri @backend;
    }

    location @backend {
        proxy_pass http://api:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 16k;
        proxy_busy_buffers_size 32k;
        proxy_max_temp_file_size 0;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /api/ {
        proxy_pass http://api:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}